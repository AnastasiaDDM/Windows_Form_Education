<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converter="using:Syncfusion.UI.Xaml.Converters"
	xmlns:local="using:Syncfusion.UI.Xaml.Controls" xmlns:Input="using:Syncfusion.UI.Xaml.Controls.Input" xmlns:sys="using:System"
	xmlns:shared="using:Syncfusion.UI.Xaml.Primitives" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <SolidColorBrush x:Key="ToolTipBackgroundThemeBrush" Color="#FF2B2B2B" />
            <SolidColorBrush x:Key="TextBoxForegroundBrush" Color="Black"/>
            <SolidColorBrush x:Key="MaskedEditBackgroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="MaskedEditHighLightBorderBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="TextBoxBackgroundThemeBrush" Color="#FF9B9B9B" />
            <SolidColorBrush x:Key="TextBoxForegroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="TextBoxFocusForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="TextBoxBorderThemeBrush" Color="#FF767676" />
            <SolidColorBrush x:Key="ToolTipBorderThemeBrush" Color="#FF767676" />
            <SolidColorBrush x:Key="ToolTipForegroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBoxPressedHighlightThemeBrush" Color="#FFD3D3D3" />
            <SolidColorBrush x:Key="ComboBoxFocusedBorderThemeBrush" Color="White" />
            <SolidColorBrush x:Key="ComboBoxFocusedBackgroundThemeBrush" Color="White" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundThemeBrush" Color="#FF115992" />
            <SolidColorBrush x:Key="ComboBoxPopupBorderThemeBrush" Color="#FF212121" />
            <SolidColorBrush x:Key="ComboBoxPopupBackgroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxPopupForegroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBoxSelectedBackgroundThemeBrush" Color="#FF4617B4" />
            <SolidColorBrush x:Key="ComboBoxArrowForegroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBoxFocusedForegroundThemeBrush" Color="White" />
            <SolidColorBrush x:Key="ComboBoxItemPressedBackgroundThemeBrush" Color="#FFD3D3D3" />
            <SolidColorBrush x:Key="ComboBoxItemPressedForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxItemPointerOverBackgroundThemeBrush" Color="#FF404040" />
            <SolidColorBrush x:Key="ComboBoxItemPointerOverForegroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBackgroundThemeBrush" Color="#FF666666" />
            <SolidColorBrush x:Key="ComboBoxSelectedPointerOverBackgroundThemeBrush" Color="#FF5F37BE" />
            <SolidColorBrush x:Key="ComboBoxArrowPressedForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedPointerOverBackgroundThemeBrush" Color="#FF0969B5" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledBackgroundThemeBrush" Color="#8C000000" />
            <SolidColorBrush x:Key="ComboBoxArrowDisabledForegroundThemeBrush" Color="#66FFFFFF" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledForegroundThemeBrush" Color="#99FFFFFF" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBorderThemeBrush" Color="#DEFFFFFF" />
            <SolidColorBrush x:Key="SfTextBoxExtDisabledBackgroundThemeBrush" Color="#FF333333"/>
            <SolidColorBrush x:Key="SystemControlForegroundBaseHighBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="SystemControlBackgroundAltMediumLowBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="SystemControlForegroundBaseMediumLowBrush" Color="#FF999999" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <SolidColorBrush x:Key="MaskedEditBackgroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="MaskedEditHighLightBorderBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ToolTipBackgroundThemeBrush" Color="{StaticResource SystemColorWindowColor}" />
            <SolidColorBrush x:Key="ToolTipBorderThemeBrush" Color="{StaticResource SystemColorWindowTextColor}" />
            <SolidColorBrush x:Key="ToolTipForegroundThemeBrush" Color="{StaticResource SystemColorWindowTextColor}" />
            <SolidColorBrush x:Key="TextBoxForegroundBrush" Color="White"/>
            <SolidColorBrush x:Key="ComboBoxPressedHighlightThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="ComboBoxFocusedBorderThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="ComboBoxFocusedBackgroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundThemeBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="ComboBoxPopupBorderThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="ComboBoxPopupBackgroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="ComboBoxPopupForegroundThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="ComboBoxSelectedBackgroundThemeBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="ComboBoxArrowForegroundThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="ComboBoxFocusedForegroundThemeBrush" Color="{StaticResource SystemColorHighlightTextColor}" />
            <SolidColorBrush x:Key="ComboBoxItemPressedBackgroundThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="ComboBoxItemPressedForegroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBackgroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="ComboBoxSelectedPointerOverBackgroundThemeBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="ComboBoxArrowPressedForegroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedPointerOverBackgroundThemeBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledBackgroundThemeBrush" Color="{StaticResource SystemColorGrayTextColor}" />
            <SolidColorBrush x:Key="ComboBoxArrowDisabledForegroundThemeBrush" Color="{StaticResource SystemColorGrayTextColor}" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledForegroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBorderThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="SfTextBoxExtDisabledBackgroundThemeBrush" Color="#FF333333"/>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <SolidColorBrush x:Key="MaskedEditBackgroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="MaskedEditHighLightBorderBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ToolTipBackgroundThemeBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ToolTipBorderThemeBrush" Color="#FF808080" />
            <SolidColorBrush x:Key="TextBoxForegroundThemeBrush" Color="Black"/>
            <SolidColorBrush x:Key="TextBoxFocusForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ToolTipForegroundThemeBrush" Color="#FF666666" />
            <SolidColorBrush x:Key="ComboBoxPressedHighlightThemeBrush" Color="#FFD3D3D3" />
            <SolidColorBrush x:Key="ComboBoxFocusedBorderThemeBrush" Color="#70000000" />
            <SolidColorBrush x:Key="ComboBoxFocusedBackgroundThemeBrush" Color="White" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundThemeBrush" Color="#FF91C1E7" />
            <SolidColorBrush x:Key="ComboBoxPopupBorderThemeBrush" Color="#FFF2F2F2" />
            <SolidColorBrush x:Key="ComboBoxPopupBackgroundThemeBrush" Color="#FFF2F2F2" />
            <SolidColorBrush x:Key="ComboBoxPopupForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxSelectedBackgroundThemeBrush" Color="#FF4617B4" />
            <SolidColorBrush x:Key="ComboBoxArrowForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxFocusedForegroundThemeBrush" Color="White" />
            <SolidColorBrush x:Key="ComboBoxItemPressedBackgroundThemeBrush" Color="#FFD3D3D3" />
            <SolidColorBrush x:Key="ComboBoxItemPressedForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxItemPointerOverBackgroundThemeBrush" Color="#FFDADADA" />
            <SolidColorBrush x:Key="ComboBoxItemPointerOverForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBackgroundThemeBrush" Color="#DEFFFFFF" />
            <SolidColorBrush x:Key="ComboBoxSelectedPointerOverBackgroundThemeBrush" Color="#FF5F37BE" />
            <SolidColorBrush x:Key="ComboBoxArrowPressedForegroundThemeBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedPointerOverBackgroundThemeBrush" Color="#FF5F37BE" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledBackgroundThemeBrush" Color="#8C000000" />
            <SolidColorBrush x:Key="ComboBoxArrowDisabledForegroundThemeBrush" Color="#66000000" />
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledForegroundThemeBrush" Color="#99FFFFFF" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBorderThemeBrush" Color="#FF666666" />
            <SolidColorBrush x:Key="SfTextBoxExtDisabledBackgroundThemeBrush" Color="#FFCCCCCC"/>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>


    <x:Double x:Key="ComboBoxArrowThemeFontSize">21</x:Double>

    <Thickness x:Key="ComboBoxBorderThemeThickness">2</Thickness>
    
    <Thickness x:Key="ComboBoxDropdownContentMargin">0,7,0,7</Thickness>

    <Thickness x:Key="ComboBoxPopupBorderThemeThickness">2</Thickness>

    <Thickness x:Key="SyncfusionUpDownBorderThemeThickness">0</Thickness>

    <Thickness x:Key="SyncfusionDropDownButtonBorderThemeThickness">2 0 0 0</Thickness>

    <SolidColorBrush x:Key="SyncfusionTextBoxExtErrorThemeBrush" Color="Red" />

    <SolidColorBrush x:Key="AccentBrush" Color="#FF1FAEFF" />

    <SolidColorBrush x:Key="TextBoxDisabledBackgroundThemeBrush" Color="Transparent"/>

    <SolidColorBrush x:Key="DropDownArrowDisabledForegroundThemeBrush" Color="White"/>

    <SolidColorBrush x:Key="TextBoxDisabledBorderThemeBrush" Color="Gray"/>

    <SolidColorBrush x:Key="TextBoxDisabledForegroundThemeBrush" Color="Gray"/>

    <SolidColorBrush x:Key="SyncfusionRatingItemPointerOverThemeBrush" Color="#FF8152EF"/>

    <Thickness x:Key="SyncfusionTransitionContentCotnrolThemePadding">5 0 0 0</Thickness>

    <converter:TimeFormater x:Key="timeFormater"/>

    <converter:DateTimeFormater x:Key="Formater"/>

    <Input:StartTimeConverter x:Key="StartTimeConverter"></Input:StartTimeConverter>

    <converter:InvertBooleanConverter x:Key="BooleanConverter"/>

    <converter:OrientationToAngleConverter x:Key="AngleConverter"/>

    <converter:PrecisionToVisibilityConverter x:Key="VisibilityConverter"/>

    <converter:PrecisionToVisibilityInverseConverter x:Key="InverseConverter"/>

    <converter:Inverter x:Key="Inverter"/>

    <converter:ToolTipVisibilityConverter x:Key="ToolTipConverter"/>

    <converter:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter"/>

    <converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanVisibilityConverter" />

    <converter:BrushToColorConverter x:Key="BrushConverter"/>

    <converter:CalendarHeaderFormatter x:Key="HeaderFormatter"/>

    <converter:EmptyStringToVisibilityConverter x:Key="EmptyStringVisibilityConverter" />

    <Input:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter"/>
    <Input:InlineModeToVisibilityConverter x:Key="InlineModeToVisibilityConverter" />
    <Input:DateFormatConverter x:Key="DateFormatConverter" />
    <Input:ContentToVisibilityConverter x:Key="ContentToVisibilityConverter" />
    <Input:DecrementButtonSettingsObjectToVisibilityConverter x:Key="DecrementButtonSettingsObjectToVisibilityConverter" />
    <Input:IncrementButtonSettingsObjectToVisibilityConverter x:Key="IncrementButtonSettingsObjectToVisibilityConverter" />
    

    <Style x:Key="DownButtonStyle" TargetType="RepeatButton">
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#19000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#33000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.3"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="0" 
								BorderBrush="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}"
                                                  Visibility="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource DecrementButtonSettingsObjectToVisibilityConverter},ConverterParameter=defaultview}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock x:Name="path" Text= "{Binding Path=Tag.DecrementButtonSettings.ButtonFontIcon,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           FontFamily="{Binding Path=Tag.DecrementButtonSettings.ButtonFontFamily,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           FontSize="{Binding Path=Tag.DecrementButtonSettings.ButtonFontSize,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                           Foreground="{Binding Path=Tag.DecrementButtonSettings.ButtonFontIconColor,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </ContentPresenter>
                                <ContentPresenter x:Name="CustomView" 
                                 Visibility="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource DecrementButtonSettingsObjectToVisibilityConverter},ConverterParameter=customview}" 
                                 Content="{Binding Path=Tag.DecrementButtonSettings.CustomView,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                 />
                                <Image Visibility="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource DecrementButtonSettingsObjectToVisibilityConverter},ConverterParameter=image}" 
                                       Stretch="Fill" Source="{Binding Path=Tag.DecrementButtonSettings.ButtonImage,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                       />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="DateSelectorButton">
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid x:Name="RootGrid" Width="50" Height="50" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullScreenLandscape"/>
                                <VisualState x:Name="Filled"/>
                                <VisualState x:Name="FullScreenPortrait">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Snapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="LightGray"
												Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#000000"
												Duration="0"/>
                                        <ColorAnimation
												Storyboard.TargetName="Content"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#FFFFFF"
												Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
                                        <DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel VerticalAlignment="Center"  >
                            <Grid Width="34" Height="34" Margin="8,8,5,5"  HorizontalAlignment="Center">
                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontStyle="Normal" FontSize="45" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                                <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontStyle="Normal" FontSize="45" Margin="-4,-19,0,0"/>
                                <ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-2,-4,0,0" FontStyle="Normal" VerticalAlignment="Center"/>
                            </Grid>
                        </StackPanel>
                        <Ellipse x:Name="FocusVisualWhite" Margin="0 0 0 2" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Ellipse x:Name="FocusVisualBlack" Margin="0 0 0 2" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="1"/>
    </Style>



    <Style x:Key="DefaultSfRatingStyle" TargetType="Input:SfRating">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TooltipBackground" Value="{StaticResource ToolTipBackgroundThemeBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfRating">
                    <Grid RenderTransformOrigin="0.5, 0.5">
                        <Grid HorizontalAlignment="Left" x:Name="PART_ToolTip" >
                            <Popup x:Name="PART_Popup" VerticalOffset="-65">
                                <Border BorderBrush="{StaticResource ToolTipBorderThemeBrush}" 
									HorizontalAlignment="Center" VerticalAlignment="Center"
									BorderThickness="2" 
									Height="37"                                 
                                    Background="{TemplateBinding TooltipBackground}"
 									Padding="10 0">

                                    <ContentPresenter x:Name="PART_Border"  Content="{Binding PreviewValue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												   FontSize="15" FontWeight="Bold"
												   Foreground="{StaticResource ToolTipForegroundThemeBrush}" 
													  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" x:Name="PART_Host"
								Margin="0 0 0 0"
								BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ItemsPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" 
											 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Input:CustomStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSfRatingItemStyle"  TargetType="Input:SfRatingItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="UnratedFill" Value="#FFE6E6E6" />
        <Setter Property="PointerOverFill" Value="#FFADADAD" />
        <Setter Property="RatedFill" Value="{StaticResource AccentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfRatingItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="MouseOverPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="Unrated"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="RatedPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Rated">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="RatedPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                        <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="Unrated"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="MouseOverPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="DefaultView" Background="{TemplateBinding Background}">
                        <Grid x:Name="PART_RatingGrid"  Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Path x:Name="Unrated" Fill="{TemplateBinding UnratedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding UnratedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding UnratedStrokeThickness}" VerticalAlignment="Stretch" Opacity="1" 
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>

                            <Path x:Name="MouseOverPath" Fill="{TemplateBinding PointerOverFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding PointerOverStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding PointerOverStrokeThickness}" VerticalAlignment="Stretch" Opacity="0" Visibility="{Binding InternalPrecision, Converter={StaticResource VisibilityConverter}, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>


                            <Path x:Name="RatedPath" Fill="{TemplateBinding RatedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding RatedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding RatedStrokeThickness}" VerticalAlignment="Stretch" Opacity="0"
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>

                            <shared:LinearClipper ExpandDirection="Right" RatioVisible="{TemplateBinding InternalValue}">
                                <Path x:Name="LinearCliperPath" Fill="{TemplateBinding RatedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding RatedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding RatedStrokeThickness}" VerticalAlignment="Stretch" 
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>
                            </shared:LinearClipper>

                            <Border Grid.Row="1" Margin="{TemplateBinding Margin}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <Grid x:Name="CustomView" Visibility="Collapsed">
                            <ContentPresenter Content="{TemplateBinding Tag}" />
                    </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Input:SfRating" BasedOn="{StaticResource DefaultSfRatingStyle}"/>

    <Style TargetType="Input:SfRatingItem" BasedOn="{StaticResource DefaultSfRatingItemStyle}"/>

    <Style TargetType="local:LoopingSelectorItem" x:Key="LoopingSelectorItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="root" Opacity="0" Background="Transparent" Padding="{TemplateBinding Padding}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">

                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{Binding Foreground, Converter={StaticResource BrushConverter},ConverterParameter=ContentBrushnull, RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#CCCCCC" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="Part_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{Binding SelectedForeground,Converter={StaticResource BrushConverter},ConverterParameter=ContentBrushnull,RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="{Binding AccentBrush, Converter={StaticResource BrushConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border.RenderTransform>
                            <TranslateTransform x:Name="Transform"/>
                        </Border.RenderTransform>

                        <Grid>
                            <Rectangle x:Name="background" Opacity="0" Fill="Transparent"/>
                            <Rectangle x:Name="Part_Disabled" Height="{Binding ElementName=Part_Border,Path=ActualHeight}" Width="{Binding ElementName=Part_Border,Path=ActualWidth}" Opacity="1" Fill="Gray"/>
                            <Border BorderThickness="2" BorderBrush="{Binding AccentBrush,Converter={StaticResource BrushConverter},ConverterParameter=AccentBrushnull, RelativeSource={RelativeSource Mode=TemplatedParent}}" x:Name="Part_Border">
                                <ContentPresenter Margin="1 0" x:Name="contentPresenter" Foreground="White"/>
                            </Border>
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="local:LoopingSelector" x:Key="LoopingSelectorStyle">
        <Setter Property="ItemHeight" Value="80"/>
        <Setter Property="ItemWidth" Value="80"/>
        <Setter Property="Width" Value="80" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ManipulationMode" Value="All"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource LoopingSelectorItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}">
                        <Canvas x:Name="ItemsPanel">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform x:Name="CenteringTransform"/>
                                    <TranslateTransform x:Name="PanningTransform"/>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TransitionContentControl" x:Key="HeaderStyle">
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Transition">
            <Setter.Value>
                <local:FadeTransition />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownButtonStyle" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DropDownArrowDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="path"/>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  Background="{TemplateBinding Background}">

                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  MinWidth="32"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Path x:Name="path" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DefaultMonthCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding MonthNumber}"/>
            <TextBlock FontSize="12" FontWeight="Light" Text="{Binding MonthName}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultDayCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding DayNumber}"/>
            <TextBlock FontSize="12" FontWeight="Light" Text="{Binding DayName}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultYearCellTemplate">
        <TextBlock FontSize="28" HorizontalAlignment="Left" Margin="2 0 0 13" Text="{Binding YearNumber}" VerticalAlignment="Bottom"/>
    </DataTemplate>

    <Style x:Key="DefaultSfDateSelectorStyle" TargetType="Input:SfDateSelector">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="SelectedForeground" Value="White"/>
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="DayCellTemplate" Value="{StaticResource DefaultDayCellTemplate}"/>
        <Setter Property="HeaderStyle" Value="{StaticResource HeaderStyle}"/>
        <Setter Property="Header" Value="Choose Date"/>
        <Setter Property="Height" Value="500"/>
        <Setter Property="MonthCellTemplate" Value="{StaticResource DefaultMonthCellTemplate}"/>
        <Setter Property="ShowDoneButton" Value="True"/>
        <Setter Property="ShowCancelButton" Value="True"/>
        <Setter Property="SelectorStyle" Value="{StaticResource LoopingSelectorStyle}"/>
        <Setter Property="YearCellTemplate" Value="{StaticResource DefaultYearCellTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDateSelector">
                    <Border  BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}" x:Name="PART_Root" 
							  Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid VerticalAlignment="Top" Grid.Row="0" x:Name="HeaderGrid" >
                                <local:TransitionContentControl Style="{TemplateBinding HeaderStyle}" IsTabStop="False"
											Content="{Binding Header,RelativeSource={RelativeSource Mode=TemplatedParent}}"
											ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											/>
                            </Grid>
                            <Grid HorizontalAlignment="Center" x:Name="LoopingSelectorGrid" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <local:LoopingSelector x:Name="PART_Month" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding MonthCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MonthCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="1" x:Name="PART_Date" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding DayCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding DayCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="2" x:Name="PART_Year" Visibility="Collapsed"  IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding YearCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding YearCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"  
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                            </Grid>

                            <Grid x:Name="FooterGrid"  HorizontalAlignment="Center" Width="100"  Grid.Row="2" Margin="2 2 6 5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button  Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_DoneButton" Margin="0 0 0 0 " Padding="20 3 20 3" Content="&#xE10B;" Grid.Column="0" HorizontalAlignment="Center"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Button Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_CancelButton" Margin="0 0 0 0" Padding="20 3 20 3"  Content="&#xE10A;" Grid.Column="1" HorizontalAlignment="Center" 
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDateSelector" BasedOn="{StaticResource DefaultSfDateSelectorStyle}"/>

    <Style x:Key="PickerTextBoxExtStyle" TargetType="Input:SfTextBoxExt">
        <Setter Property="Background" Value="{ThemeResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfTextBoxExt">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{ThemeResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{ThemeResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"/>
                        <TextBlock Text="{TemplateBinding Text}" Margin="{TemplateBinding BorderThickness}" x:Name="Element"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
								   Foreground="{TemplateBinding Foreground}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}"
								   Padding="{TemplateBinding Padding}"/>
                        <ContentControl IsTabStop="False"
										Visibility="{Binding Text,Converter={StaticResource EmptyStringVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}}"
										Content="{TemplateBinding Watermark}" 
										ContentTemplate="{TemplateBinding WatermarkTemplate}" 
										ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" 
										Margin="{TemplateBinding BorderThickness}" 
										Padding="{TemplateBinding Padding}"/>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Input:NameToScopeConverter x:Key="NameToScope"/>

    <Style TargetType="Input:SfDatePicker" x:Key="DefaultSfDatePickerStyle">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="DropDownHeight" Value="400"/>
        <Setter Property="FormatString" Value="d" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDatePicker">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border  Background="Transparent">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Input:SfTextBoxExt AllowPointerEvents="True"  
												  x:Name="PART_TextBlock" 
												  IsReadOnly="True"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
												  Style="{StaticResource PickerTextBoxExtStyle}" 
												  Text="{Binding Value,Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Background="{TemplateBinding Background}" 
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource InverseBooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Grid.Column="0" IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{TemplateBinding Watermark}"
												  WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
												  />

                                <Input:SfTextBoxExt Grid.Column="0" InputScope="{Binding InputScope,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource NameToScope}}" Text="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  x:Name="PART_TextBoxExt" 
												  IsReadOnly="true"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
												  AllowPointerEvents="True" IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
												  Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>
                                <Rectangle Width="2" Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="1" />
                                <RepeatButton x:Name="PART_DropDownButton" 
											  Style="{StaticResource DropDownButtonStyle}"  
											  IsTabStop="{Binding AllowInlineEditing,RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Background="{Binding AccentBrush,RelativeSource={RelativeSource TemplatedParent}}"   
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="2" />
                            </Grid>
                        </Border>

                        <Popup x:Name="PART_DropDown" FlowDirection="LeftToRight"
							   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid x:Name="PART_DatePickerPage" Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
                                <Input:SfDateSelector BorderThickness="{TemplateBinding BorderThickness}"
								Style="{Binding SelectorStyle,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										BorderBrush="#000000"  IsEnabled="{Binding IsEnabled,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" FlowDirection="{TemplateBinding FlowDirection}"
										x:Name="PART_DateSelector" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										SelectedDateTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultSfDatePickerStyle}" TargetType="Input:SfDatePicker"/>

    <DataTemplate x:Key="DefaultHourCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding HourNumber}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultMinuteCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding MinuteNumber}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultSecondCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock  FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding SecondNumber}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultMeridiemCellTemplate">
        <TextBlock FontWeight="Light" FontSize="28" HorizontalAlignment="Center" Text="{Binding AmPmString}" VerticalAlignment="Bottom"/>
    </DataTemplate>

    <Style TargetType="Input:SfTimeSelector" x:Key="DefaultSfTimeSelectorStyle">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="SelectedForeground" Value="White"/>
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Header" Value="Choose Time"/>
        <Setter Property="Height" Value="400"/>
        <Setter Property="HeaderStyle" Value="{StaticResource HeaderStyle}"/>
        <Setter Property="HourCellTemplate" Value="{StaticResource DefaultHourCellTemplate}"/>
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="MeridiemCellTemplate" Value="{StaticResource DefaultMeridiemCellTemplate}"/>
        <Setter Property="MinuteCellTemplate" Value="{StaticResource DefaultMinuteCellTemplate}"/>
        <Setter Property="SecondCellTemplate" Value="{StaticResource DefaultSecondCellTemplate}"/>
        <Setter Property="ShowDoneButton" Value="True"/>
        <Setter Property="ShowCancelButton" Value="True"/>
        <Setter Property="SelectorStyle" Value="{StaticResource LoopingSelectorStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfTimeSelector">
                    <Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">

                        <Grid Background="{TemplateBinding Background}" x:Name="PART_Root">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid VerticalAlignment="Top" Grid.Row="0" x:Name="HeaderGrid">
                                <local:TransitionContentControl Style="{Binding HeaderStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
											Content="{Binding Header,RelativeSource={RelativeSource Mode=TemplatedParent}}"
											ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Grid>
                            <Grid HorizontalAlignment="Center" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <local:LoopingSelector x:Name="PART_Hour" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding HourCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding HourCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="1" x:Name="PART_Minute" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														ItemTemplate="{Binding MinuteCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MinuteCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="2" x:Name="PART_Second" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding SecondCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding SecondCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="3" x:Name="PART_Meridiem" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"   
														ItemTemplate="{Binding MeridiemCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MeridiemCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </local:LoopingSelector>
                            </Grid>

                            <Grid HorizontalAlignment="Center" Grid.Row="2" Margin="2 0 2 6" Width="100"  x:Name="FooterGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_SelectButton" Content="&#xE10B;"  HorizontalAlignment="Center" Grid.Row="0" Padding="20 3"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Button Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_CancelButton"  Content="&#xE10A;"  Grid.Column="1" HorizontalAlignment="Center" Padding="20 3"
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultSfTimeSelectorStyle}" TargetType="Input:SfTimeSelector"/>

    <Style TargetType="Input:SfTimePicker" x:Key="DefaultSfTimePickerStyle">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="DropDownHeight" Value="400"/>
        <Setter Property="FormatString" Value="hh:mm tt"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Input:SfTextBoxExt AllowPointerEvents="True"  
												  x:Name="PART_TextBlock" 
												  IsReadOnly="True"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}" 
												  Style="{StaticResource PickerTextBoxExtStyle}" 
												  Text="{Binding Value,Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Background="{TemplateBinding Background}" 
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource InverseBooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Grid.Column="0" IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>

                                <Input:SfTextBoxExt Grid.Column="0" InputScope="{Binding InputScope,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource NameToScope}}" Text="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  x:Name="PART_TextBoxExt" 
												  IsReadOnly="true" 
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
												  AllowPointerEvents="True" IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
												  Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>
                                <Rectangle Width="2" Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="1" />
                                <RepeatButton x:Name="PART_DropDownButton" 
											  Style="{StaticResource DropDownButtonStyle}"  
											  IsTabStop="{Binding AllowInlineEditing,RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Background="{Binding AccentBrush,RelativeSource={RelativeSource TemplatedParent}}"   
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="2" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_DropDown" FlowDirection="LeftToRight"
							   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid x:Name="PART_TimePickerPage" Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
                                <Input:SfTimeSelector BorderThickness="{TemplateBinding BorderThickness}" FlowDirection="{TemplateBinding FlowDirection}"
										BorderBrush="#000000"  IsEnabled="{Binding IsEnabled,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										x:Name="PART_TimeSelector" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										SelectedTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultSfTimePickerStyle}" TargetType="Input:SfTimePicker"/>


    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="Input:SfRangeSlider" x:Key="DefaultSfRangeSliderStyle">
        <Setter Property="ThumbColor" Value="#0078d7"/>
        <Setter Property="LabelColor" Value="Black"/>        
        <Setter Property="ToolTipBackground" Value="White"/>        
        <Setter Property="ToolTipForeground" Value="Black"/>
        <Setter Property="Background" Value="#a6a6a6"/>
        <Setter Property="BorderBrush" Value="{StaticResource SliderBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource SliderBorderThemeThickness}"/>
        <Setter Property="Foreground" Value="#007cee"/>
        <Setter Property="ManipulationMode" Value="None"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfRangeSlider">
                    <Grid Margin="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalDecreaseRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalDecreaseRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalRangeEndThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalRangeStartThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalRangeEndThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalRangeStartThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalBorder">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalBorder">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalDecreaseRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalDecreaseRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalRangeEndThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalRangeStartThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalRangeEndThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalRangeStartThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TopTickBar">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalInlineTickBar">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BottomTickBar">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LeftTickBar">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalInlineTickBar">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RightTickBar">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalDecreaseRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalTrackRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalDecreaseRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalTrackRect">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalRangeEndThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalRangeStartThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalRangeEndThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalRangeStartThumb">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhiteHorizontal"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlackHorizontal"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhiteVertical"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlackVertical"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalTemplate" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Height="{TemplateBinding TrackThickness}" Fill="{TemplateBinding Background}" Grid.Row="1"/>
                            <Rectangle x:Name="HorizontalDecreaseRect" Height="{TemplateBinding TrackSelectionThickness}" Width="{TemplateBinding ActualWidth}" Fill="{TemplateBinding Foreground}" Grid.Row="1" Grid.ColumnSpan="3"/>
                            <Input:TickBar x:Name="TopTickBar" IsEnabled="False" IsHitTestVisible="False" Grid.ColumnSpan="3" 
                                           Margin="0,0,0,2" Visibility="Collapsed" VerticalAlignment="Bottom" 
                                           Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"
                                           LabelPlacement="{TemplateBinding LabelPlacement}"
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}" 
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" CustomLabels="{TemplateBinding CustomLabels}"
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"
                                           LabelColor="{TemplateBinding LabelColor}"/>
                            <Input:TickBar x:Name="HorizontalInlineTickBar" IsEnabled="False" IsHitTestVisible="False" 
                                           Grid.ColumnSpan="3" Grid.Row="1" Visibility="Collapsed" Margin="0"
                                           Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" 
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}" 
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}" 
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}" 
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"
                                           LabelColor="{TemplateBinding LabelColor}"/>
                            <Input:TickBar x:Name="BottomTickBar" IsEnabled="False" IsHitTestVisible="False" 
                                           Grid.ColumnSpan="3" Margin="0,2,0,0" Grid.Row="2" Visibility="Collapsed" 
                                           VerticalAlignment="Top" Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}"
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}"
                                           ValuePlacement="{TemplateBinding ValuePlacement}"  
                                           TickPlacement="{TemplateBinding TickPlacement}" 
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}"
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"
                                           LabelColor="{TemplateBinding LabelColor}"/>
                            <Rectangle x:Name="HorizontalBorder" Grid.ColumnSpan="3"  Height="{TemplateBinding TrackThickness}" Grid.Row="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Thumb x:Name="HorizontalRangeStartThumb" Background="{TemplateBinding ThumbColor}" BorderBrush="{TemplateBinding ThumbColor}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="16" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="6" Visibility="Collapsed"/>
                            <Thumb x:Name="HorizontalRangeEndThumb" Background="{TemplateBinding ThumbColor}" BorderBrush="{TemplateBinding ThumbColor}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="16" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="6"/>
                            <Rectangle x:Name="FocusVisualWhiteHorizontal" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlackHorizontal" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                        <Grid x:Name="VerticalTemplate" Background="Transparent" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="VerticalTrackRect"  Width="{TemplateBinding TrackThickness}" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.RowSpan="3"/>
                            <Rectangle x:Name="VerticalDecreaseRect"  Width="{TemplateBinding TrackSelectionThickness}" Grid.Column="1" Fill="{TemplateBinding Foreground}" Grid.RowSpan="3"/>
                            <Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="LeftTickBar" 
                                           HorizontalAlignment="Right" Margin="0,0,2,0" Grid.RowSpan="3"
                                           Visibility="Collapsed"  Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" 
                                           TickFrequency="{TemplateBinding TickFrequency}"
                                           LabelPlacement="{TemplateBinding LabelPlacement}"
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}"
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}"
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}"
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"
                                           LabelColor="{TemplateBinding LabelColor}"/>
                            <Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="VerticalInlineTickBar"
                                           Grid.Column="1" Grid.RowSpan="3" Visibility="Collapsed" Margin="0"
                                           Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}"
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}"
                                           Orientation="{TemplateBinding Orientation}"
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}" 
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}"
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}" 
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"
                                           LabelColor="{TemplateBinding LabelColor}"/>
                            <Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="RightTickBar" Grid.Column="2"
                                           HorizontalAlignment="Left" Margin="2,0,0,0" Grid.RowSpan="3"
                                           Visibility="Collapsed"  Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}"
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" 
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}" 
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}"
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}" 
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"
                                           LabelColor="{TemplateBinding LabelColor}"/>
                            <Rectangle x:Name="VerticalBorder"  Width="{TemplateBinding TrackThickness}" Grid.Column="1" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Thumb x:Name="VerticalRangeStartThumb" Background="{TemplateBinding ThumbColor}" BorderBrush="{TemplateBinding ThumbColor}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="6" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="16" Visibility="Collapsed"/>
                            <Thumb x:Name="VerticalRangeEndThumb" Background="{TemplateBinding ThumbColor}" BorderBrush="{TemplateBinding ThumbColor}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="6" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="16"/>
                            <Rectangle x:Name="FocusVisualWhiteVertical" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlackVertical" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfRangeSlider" BasedOn="{StaticResource DefaultSfRangeSliderStyle}"/>


    <Style TargetType="Input:TickBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:TickBar">
                    <Grid x:Name="PART_Layout" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:TickBarItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:TickBarItem">
                    <Grid x:Name="PART_TickBarItem">
                        <Grid x:Name="BottomPanel" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"  x:Name="PART_Line" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}" VerticalAlignment="Bottom"/>
                            <TextBlock Text="{TemplateBinding Tick}" Foreground="{Binding LabelColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Grid.Row="1" x:Name="PART_Text" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="RightPanel" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"    x:Name="PART_LineRight" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}" HorizontalAlignment="Right"/>
                            <TextBlock Text="{TemplateBinding Tick}" Foreground="{Binding LabelColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Grid.Column="1" x:Name="PART_TextRight" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="TopPanel" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{TemplateBinding Tick}" Foreground="{Binding LabelColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" x:Name="PART_TextTop" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top" Visibility="Collapsed"/>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"  Grid.Row="1" x:Name="PART_LineTop" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}" VerticalAlignment="Top"/>
                        </Grid>
                        <Grid x:Name="LeftPanel" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="10"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{TemplateBinding Tick}" Foreground="{Binding LabelColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" x:Name="PART_TextLeft" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top"  Visibility="Collapsed"/>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"  Grid.Column="1" x:Name="PART_LineLeft" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SuggestionBox" x:Key="DefaultSuggestionBoxStyle">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="{StaticResource ToolTipBackgroundThemeBrush}" />
                    <Setter Property="TabNavigation" Value="Local"/>
                    <Setter Property="Padding" Value="12,11,12,13"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="UseSystemFocusVisuals" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid x:Name="LayoutRoot" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
                                    <Grid.Resources>
                                        <Style x:Key="BaseContentPresenterStyle" TargetType="ContentPresenter">
                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
                                            <Setter Property="TextLineBounds" Value="Full"/>
                                            <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
                                        </Style>
                                    </Grid.Resources>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="SelectedUnfocused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="SelectedPointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="SelectedPressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="PressedBackground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="PressedBackground" Fill="Transparent" Control.IsTemplateFocusTarget="True"/>
                                    <ContentPresenter x:Name="ContentPresenter" 
                                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                      ContentTransitions="{TemplateBinding ContentTransitions}" 
                                                      Content="{TemplateBinding Content}" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      Margin="{TemplateBinding Padding}"
                                                      Style="{StaticResource BaseContentPresenterStyle}" 
                                                      TextWrapping="NoWrap" 
                                                      VerticalAlignment="Center"
                                                      FontFamily="{TemplateBinding FontFamily}"
                                                      FontSize="{TemplateBinding FontSize}"
                                                      FontWeight="{TemplateBinding FontWeight}"
                                                      FontStyle="{TemplateBinding FontStyle}"
                                                      Foreground="{TemplateBinding Foreground}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>        
    </Style>
    
    <Style x:Key="DefaultSfTextBoxExtStyle" TargetType="Input:SfTextBoxExt">
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="WatermarkForeground" Value="{ThemeResource SystemControlPageTextBaseMediumBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="SuggestionBoxStyle" Value="{StaticResource DefaultSuggestionBoxStyle}"/>
        <Setter Property="SuggestionItemForeground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfTextBoxExt">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SfTextBoxExtDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SfTextBoxExtDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_Watermark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <!--<Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                               Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement" >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxFocusForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_Watermark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxFocusForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualState x:Name="TopLight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2 2 2 0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomLight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2 0 2 2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopDark">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomDark">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="Opacity" To="1" Storyboard.TargetName="PART_Error"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Grid.Row="1">
                            <Popup IsOpen="{TemplateBinding IsSuggestionOpen}"  x:Name="PART_Popup"
								   >
                                <Grid Background="{StaticResource ToolTipBackgroundThemeBrush}">

                                    <Input:SuggestionBox x:Name="PART_SuggestionBox" ItemsSource="{TemplateBinding Suggestions}"
                                                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                         ScrollViewer.VerticalScrollBarVisibility="Auto"
														 SelectedIndex="{Binding SuggestionIndex, Mode=TwoWay, 
                                                         RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														 BorderBrush="{TemplateBinding BorderBrush}" 
                                                         FontFamily="{TemplateBinding SuggestionItemFontFamily}"
                                                         FontSize="{TemplateBinding SuggestionItemFontSize}"
                                                         FontStyle="{TemplateBinding SuggestionItemFontStyle}"
                                                         FontWeight="{TemplateBinding SuggestionItemFontWeight}"
                                                         Foreground="{TemplateBinding SuggestionItemForeground}"
                                                         Style="{TemplateBinding SuggestionBoxStyle}"
                                                         ItemTemplate="{TemplateBinding AutoCompleteItemTemplate}"
                                                         ItemTemplateSelector="{TemplateBinding AutoCompleteItemTemplateSelector}">
                                    </Input:SuggestionBox>
                                </Grid>
                            </Popup>
                        </Grid>
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBorderThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Gray"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="BorderElement" BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                                    <Border x:Name="BackgroundElement" Background="{StaticResource TextBoxButtonBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}">
                                                        <TextBlock x:Name="GlyphElement" Foreground="{ThemeResource SystemControlForegroundChromeBlackMediumBrush}" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="12" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="BackgroundElement" Grid.Row="1" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                            <Border x:Name="BorderElement" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}"  Grid.ColumnSpan="2" />
                            <Border x:Name="PART_Error" Opacity="0" Grid.Row="1" BorderBrush="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"  BorderThickness="{TemplateBinding BorderThickness}"  Grid.ColumnSpan="2" />
                            <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" FontWeight="Normal" Margin="0,0,0,8"  Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <ContentControl x:Name="PART_Watermark" Grid.Row="1" IsTabStop="False" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}" ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding WatermarkForeground}"/>
                            <ScrollViewer x:Name="ContentElement" VerticalAlignment="Center" Grid.Row="1" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}" IsHitTestVisible="False" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1"/>
                            <Button x:Name="DeleteButton" Grid.Row="1" MinWidth="32" MinHeight="{Binding ActualHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfTextBoxExt" BasedOn="{StaticResource DefaultSfTextBoxExtStyle}"/>

    <Style TargetType="Input:SfNumericTextBox" x:Key="DefaultSfNumericTextBoxStyle" BasedOn="{StaticResource DefaultSfTextBoxExtStyle}">
        <Setter Property="InputScope" Value="Number"/>
    </Style>

    <Style TargetType="Input:SfNumericTextBox" BasedOn="{StaticResource DefaultSfNumericTextBoxStyle}"/>
    
    <Style x:Key="DefaultSfMaskedEditStyle" TargetType="Input:SfMaskedEdit">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource MaskedEditBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfMaskedEdit">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <!--<Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                        <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                               Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MaskedEditHighLightBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement" >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxFocusForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PART_Watermark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxFocusForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualState x:Name="TopLight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2 2 2 0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomLight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2 0 2 2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopDark">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomDark">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>

                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="GlyphElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Gray"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="GlyphElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="Black"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="BorderElement" BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                                    <Border x:Name="BackgroundElement" Background="{StaticResource TextBoxButtonBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}">
                                                        <Path x:Name="GlyphElement" Stretch="Fill" Fill="#FF494949" Data="F1 M 402.043,272.056L 397.994,272.056L 392.001,278.049L 386.006,272.056L 381.957,272.056L 389.975,280.075L 382.105,287.944L 386.157,287.944L 392.001,282.101L 397.845,287.944L 401.897,287.944L 394.028,280.074L 402.043,272.056 Z " 
                                                              HorizontalAlignment="Right"
                                                              VerticalAlignment="Center" Margin="8 9" />
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                            <ContentControl x:Name="PART_Watermark" IsTabStop="False" Content="{Binding Watermark,RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplateSelector="{Binding WatermarkTemplateSelector,RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                            <ScrollViewer x:Name="ContentElement" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>
                            <Popup x:Name="PART_ErrorPopup" Width="auto" Margin="0 -5 0 -5" VerticalAlignment="Bottom" >
                                <Grid>
                                    <Path Stretch="Fill" Fill="#FFFF5F5F" Data="F1 M 363.623,268.465L 357,261.842L 350.378,268.465L 335.433,268.465L 335.433,298.158L 448.567,298.158L 448.567,268.465L 363.623,268.465 Z " 
                                          HorizontalAlignment="Right" Height="36.315" 
                                          VerticalAlignment="Top" 
                                          Stroke="#FF999999" StrokeThickness="0.25"/>
                                    <TextBlock Text="Invalid value" Margin="0 0 0 5" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontStretch="ExtraExpanded" FontSize="18" FontFamily="{TemplateBinding FontFamily}" Foreground="White"/>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfMaskedEdit" BasedOn="{StaticResource DefaultSfMaskedEditStyle}"/>
    
    <Style TargetType="Input:SfDomainUpDown" x:Key="DefaultSfDomainUpDownStyle">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsTapEnabled" Value="True"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDomainUpDown">
                    <Grid x:Name="Main_Grid" IsTapEnabled="{TemplateBinding IsTapEnabled}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Main_Grid"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <local:SfUpDown x:Name="PART_UpDown" Grid.Column="1" IsTabStop="False" IsTapEnabled="{TemplateBinding IsTapEnabled}"
									   Style="{Binding UpDownStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									   AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									  DownCommand="{Binding DecrementCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
									  SpinButtonsAlignment="{Binding SpinButtonsAlignment, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
									  UpCommand="{Binding IncrementCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <local:SfUpDown.UpDownContent>
                                <Grid x:Name="InnerGrid" Background="{TemplateBinding Background}" IsTapEnabled="{TemplateBinding IsTapEnabled}">
                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" IsTapEnabled="{TemplateBinding IsTapEnabled}">
                                        <local:TransitionContentControl x:Name="PART_Content" IsTabStop="False" IsTapEnabled="{TemplateBinding IsTapEnabled}"
																		ContentTemplate="{TemplateBinding ContentTemplate}" 
																		ContentTransitions="{TemplateBinding ContentTransition}" 
																		Content="{TemplateBinding Value}" 
																		EnableAnimation="{TemplateBinding EnableSpinAnimation}" 
																		HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																		Margin="{StaticResource SyncfusionTransitionContentCotnrolThemePadding}" 
																		VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <local:TransitionContentControl.Transition>
                                                <local:SlideTransition Direction="Up"/>
                                            </local:TransitionContentControl.Transition>
                                        </local:TransitionContentControl>
                                    </Border>
                                </Grid>
                            </local:SfUpDown.UpDownContent>
                        </local:SfUpDown>
                        <Rectangle x:Name="FocusVisualWhite" Opacity="0" IsHitTestVisible="False"  StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" Opacity="0" IsHitTestVisible="False"  StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDomainUpDown" BasedOn="{StaticResource DefaultSfDomainUpDownStyle}"/>



    <Style x:Key="UpButtonStyle" TargetType="RepeatButton">
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#19000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#33000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.3"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="0" 
								BorderBrush="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}"
                                                    Visibility="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource IncrementButtonSettingsObjectToVisibilityConverter},ConverterParameter=defaultview}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock x:Name="path" Text="{Binding Path=Tag.IncrementButtonSettings.ButtonFontIcon,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           FontFamily="{Binding Path=Tag.IncrementButtonSettings.ButtonFontFamily,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           FontSize="{Binding Path=Tag.IncrementButtonSettings.ButtonFontSize,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                           Foreground="{Binding Path=Tag.IncrementButtonSettings.ButtonFontIconColor,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </ContentPresenter>
                                <ContentPresenter x:Name="CustomView" 
                                 Visibility="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource IncrementButtonSettingsObjectToVisibilityConverter},ConverterParameter=customview}" 
                                 Content="{Binding Path=Tag.IncrementButtonSettings.CustomView,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                 />
                                <Image Visibility="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource IncrementButtonSettingsObjectToVisibilityConverter},ConverterParameter=image}" 
                                       Stretch="Fill" Source="{Binding Path=Tag.IncrementButtonSettings.ButtonImage,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                       />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumericRepeatButtonStyle" TargetType="local:SfUpDown">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SfUpDown">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid x:Name="PART_OuterGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="PART_Content" Content="{TemplateBinding UpDownContent}" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}"
										HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                            <RepeatButton x:Name="PART_DownButton" Tag="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}"  Background="{TemplateBinding AccentBrush}"
									  VerticalAlignment="Stretch" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}" Grid.Column="1" IsTabStop="False" 
									  Style="{StaticResource DownButtonStyle}" Command="{TemplateBinding DownCommand}"
                                           Height="{Binding Path=Tag.DecrementButtonSettings.ButtonHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                      Width="{Binding Path=Tag.DecrementButtonSettings.ButtonWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <RepeatButton x:Name="PART_UpButton" Tag="{Binding Path=Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}" Background="{TemplateBinding AccentBrush}" 
									  VerticalAlignment="Stretch" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}" Grid.Column="2" IsTabStop="False"
									  Style="{StaticResource UpButtonStyle}" Command="{TemplateBinding UpCommand}"
                                              Height="{Binding Path=Tag.IncrementButtonSettings.ButtonHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                      Width="{Binding Path=Tag.IncrementButtonSettings.ButtonWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfNumericUpDown" x:Key="DefaultSfNumericUpDownStyle">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="UpDownButtonColor" Value="Black" />
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="UpDownStyle" Value="{StaticResource NumericRepeatButtonStyle}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfNumericUpDown">
                    <Grid x:Name="PART_OuterGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_UpDown">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SfTextBoxExtDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                   
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_UpDown"
                                               Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_UpDown">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <local:SfUpDown x:Name="PART_UpDown"  IsTabStop="False" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Tag="{TemplateBinding UpDownButtonColor}"    
									   Style="{Binding UpDownStyle, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										   VerticalContentAlignment="Center" AccentBrush="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" DownCommand="{Binding SpinDownCommand, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" SpinButtonsAlignment="{Binding SpinButtonsAlignment, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" UpCommand="{Binding SpinUpCommand, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <local:SfUpDown.UpDownContent>
                                <Grid>
                                    <Input:SfNumericTextBox x:Name="PART_Content" PercentDisplayMode="{TemplateBinding PercentDisplayMode}"  FontSize="{TemplateBinding FontSize}" BorderThickness="0"
                                            Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" FontFamily="{TemplateBinding FontFamily}"
                                            MinWidth="{StaticResource TextControlThemeMinWidth}" AllowNull="{Binding AllowNull, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														    Culture="{Binding Culture, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsTabStop="{TemplateBinding IsTabStop}"
                                                            FormatString="{Binding FormatString, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            MaximumNumberDecimalDigits="{Binding MaximumNumberDecimalDigits, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            ParsingMode="{Binding ParsingMode, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            BlockCharactersOnTextInput="{Binding BlockCharactersOnTextInput, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            TextAlignment="{Binding TextAlignment, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"                                                             
                                                            Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            WatermarkTemplate="{Binding WatermarkTemplate, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            WatermarkTemplateSelector="{Binding WatermarkTemplateSelector, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            Watermark="{Binding Watermark, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Grid>
                            </local:SfUpDown.UpDownContent>
                        </local:SfUpDown>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfNumericUpDown" BasedOn="{StaticResource DefaultSfNumericUpDownStyle}"/>

    <Style TargetType="local:TransitionContentControl" x:Key="Editors_HeaderStyle">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Transition">
            <Setter.Value>
                <local:FadeTransition />
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate x:Key="DefaultCellTemplate">
        <Grid>
            <TextBlock Text="{Binding Day}" x:Name="Text" HorizontalAlignment="Center"
					   VerticalAlignment="Top"
					   Margin="3,5,3,3"/>
            <ContentPresenter x:Name="contentpresenter" Visibility="Collapsed"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DisabledCellTemplate">
        <Grid x:Name="disabledCell">
            <TextBlock Text="{Binding Day}" x:Name="disabledCellText"
					   VerticalAlignment="Top" Opacity="1" HorizontalAlignment="Center"
					   Margin="3,5,3,3"/>
            <ContentPresenter x:Name="contentpresenter" Visibility="Collapsed"/>
        </Grid>
    </DataTemplate>

    <!--<DataTemplate x:Key="DefaultHeaderTemplate">
        <Grid>
            <TextBlock Text="{Binding}"
					   FontSize="22" Margin="0 5"/>
        </Grid>
    </DataTemplate>-->

    <DataTemplate x:Key="DefaultAppointmentCellTemplate">
        <Grid>
            <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding Appointment}"  VerticalAlignment="Bottom" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Ellipse x:Name="Circle" Height="7" Width="7" Fill="{Binding Color }" Margin="2,0,2,5"  />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Text="{Binding Day.Day}" HorizontalAlignment="Center" x:Name="appointmentcellText" VerticalAlignment="Top"
					   Margin="3,5,3,3"/>
            <ContentPresenter x:Name="Appointmentpresenter" Visibility="Collapsed"/>
    </Grid>
    </DataTemplate>

    <ControlTemplate TargetType="Button" x:Name="DefaultPreviousScrollButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#2FA0D5"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                         </Storyboard>
                    </VisualState>

                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <TextBlock x:Name="arrow" Text="&#xE00E;" FontSize="{Binding Path=Tag.NavigationArrowThickness,RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="Black" FontFamily="Segoe MDL2 Assets" />
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Name="DefaultNextScrollButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#2FA0D5"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                         </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <TextBlock x:Name="arrow" Text="&#xE00F;" FontSize="{Binding Path=Tag.NavigationArrowThickness,RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="Black" FontFamily="Segoe MDL2 Assets" />
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="DefaultBlackOutTemplate">
        <Grid>
            <TextBlock Text="&#xE106;" 
					   VerticalAlignment="Top" FontFamily="Segoe UI Symbol"
					   Margin="3" HorizontalAlignment="Right" x:Name="BlackText" />
            <TextBlock Text="{Binding Day}" 
					  VerticalAlignment="Top" HorizontalAlignment="Center"
					   Margin="7,5,7,3" x:Name="BlackDate" />
            <ContentPresenter x:Name="contentpresenter" Visibility="Collapsed"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DefaultMonthInYearHeaderTemplate">
        <Grid>
            <TextBlock Text="{Binding}"
					   FontSize="20" Margin="0 5"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DefaultYearTemplate">
        <Grid>
            <TextBlock Text="{Binding Converter={StaticResource DateFormatConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center"
					   FontSize="20" />
        </Grid>
    </DataTemplate>

    <Style x:Key="HeaderDayButtonStyle" TargetType="Input:CalendarDayButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:CalendarDayButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0"
														 Storyboard.TargetName="PART_Content"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InActive">
                                    <Storyboard>
                                        <DoubleAnimation To="0.6" Duration="0"
														 Storyboard.TargetName="PART_Content"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#0078d7">

                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#0078d7">

                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarStates">
                                <VisualState x:Name="Today">
                                    <Storyboard >
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Today" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="White"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>                                        
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Other"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Selected" d:IsOptimized="True"/>                                       
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Multiple">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Selected" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_MultiSelect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                             
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PART_PointerOver"  Fill="{StaticResource ButtonPointerOverBackgroundThemeBrush}" Opacity="0"/>
                        <Rectangle x:Name="PART_PointerPressed" Fill="{StaticResource ButtonPressedBackgroundThemeBrush}" Opacity="0"/>
                        <Rectangle x:Name="PART_Today" Fill="{Binding Path=SelectedDateBackground, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0"/>
                        <Rectangle x:Name="PART_Focus" Stroke="{StaticResource ApplicationForegroundThemeBrush}" Margin="1" Opacity="0" StrokeDashArray="2 2"/>
                        <Rectangle x:Name="PART_Selected" Fill="{Binding Path=SelectedDateBackground, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0"/>
                        <Path  x:Name="PART_MultiSelect" HorizontalAlignment="Right"  VerticalAlignment="Top" Opacity="0" Data="M-150.204,626.126C-152.317,626.126 -154.429,626.126 -156.541,626.126 -167.642,633.42 -180.629,646.047 -189.668,657.238 -190.916,658.782 -192.945,662.362 -193.701,662.422 -194.041,662.448 -198.024,659.719 -198.614,659.297 -202.818,656.279 -205.779,653.709 -209.257,650.899 -211.248,652.172 -212.879,653.805 -214.153,655.797 -206.627,665.074 -200.283,675.534 -193.124,685.18 -181.491,665.11 -168.473,644.683 -152.796,629.006 -151.735,627.946 -149.817,626.933 -150.204,626.126z" Stretch="Uniform" Fill="{StaticResource ButtonForegroundThemeBrush}" Width="10" Height="8" Margin="5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>

                        <Popup Name="Part_Popup" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalOffset="0" HorizontalOffset="0" Margin="10"  Opacity="0" IsHitTestVisible="False">
                            <StackPanel>
                                <Ellipse Width="16"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource AccentBrush}"  Height="16" x:Name="Part_Circle" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <CompositeTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>

                            </StackPanel>
                        </Popup>
                        <local:TransitionContentControl 
							x:Name="PART_Content" IsTabStop="False"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch" Foreground="{TemplateBinding Foreground}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}">
                        </local:TransitionContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}"/>
    </Style>

    <Style TargetType="Input:CalendarDayButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:CalendarDayButton">
                    <Grid Background="Transparent" Canvas.ZIndex="1" x:Name="root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Active"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.ActiveMonthCellForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InActive">
                                    <Storyboard>
                                        <!--<DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.6"
                                            Duration="0" />-->
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="PART_InActive"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.6"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.InActiveMonthCellForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Active"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.ActiveMonthCellForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disable">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Disable"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.DisabledCellForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BlackOut">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Disable"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ClearActiveStates" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Control.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_PointerOver"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerFocused">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarStates">
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Today"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Active"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.TodayCellForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TodayInActive">
                                    <Storyboard>
                                        <DoubleAnimation d:IsOptimized="True"
                                            Storyboard.TargetName="Bd"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.6"
                                            Duration="0" />
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_InActive"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Today"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.6"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.TodayCellForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Other" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Selected"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.SelectedDayForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AppointmentSelected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_AppointmentSelected"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.SelectedDayForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Multiple">
                                    <Storyboard>
                                        <DoubleAnimation
                                            d:IsOptimized="True"
                                            Storyboard.TargetName="PART_Selected"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames d:IsOptimized="True" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Control.Foreground)" RepeatBehavior="Forever">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=parentCalendar.SelectedDayForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle
                            x:Name="PART_Active"
                            Fill="{Binding Path=parentCalendar.ActiveMonthCellBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_InActive"
                            Fill="{Binding Path=parentCalendar.InActiveMonthCellBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_Disable"
                            Fill="{Binding Path=parentCalendar.DisabledCellBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_PointerOver"
                            Fill="{StaticResource ButtonPointerOverBackgroundThemeBrush}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_PointerPressed"
                            Fill="{StaticResource ButtonPressedBackgroundThemeBrush}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_Today"
                            Fill="{Binding Path=parentCalendar.TodayCellBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Opacity="0" />
                        <Rectangle
                            x:Name="PART_Focus"
                            Margin="1"
                            Opacity="0"
                            Stroke="{StaticResource ApplicationForegroundThemeBrush}"
                            StrokeDashArray="2 2" />
                        <Rectangle Canvas.ZIndex="2"
                            x:Name="PART_Selected"
                            Fill="{Binding Path=parentCalendar.SelectedDateBackground, RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity="0" />
                        <Rectangle Canvas.ZIndex="2"
                            x:Name="PART_AppointmentSelected"
                            Fill="{Binding Path=parentCalendar.AppointmentBackground, RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity="0" />
                        <Rectangle Canvas.ZIndex="1"
                            x:Name="PART_CustomBackground"
                            Fill="Transparent"
                            />

                        <Popup Name="Part_Popup" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalOffset="0" HorizontalOffset="0" Margin="10"  Opacity="0" IsHitTestVisible="False">
                            <StackPanel>
                                <Ellipse Width="16"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource AccentBrush}"  Height="16" x:Name="Part_Circle" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <CompositeTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>

                            </StackPanel>
                        </Popup>
                        <Grid x:Name="Bd" Canvas.ZIndex="3">
                            <ContentControl 
                                x:Name="PART_Content"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                IsTabStop="False" />

                            <ContentControl
                                x:Name="PART_CustomContent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="{Binding ElementName=PART_Content, Path=Background}"
                                Content="{TemplateBinding Tag}"
                                IsTabStop="False"
                                Visibility="Collapsed" />
                            <ContentControl 
                                x:Name="Part_Appointment"
                                 HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Background="{Binding ElementName=PART_Content, Path=Background}"
                                Visibility="Collapsed"
                                Foreground="{Binding ElementName=PART_Content, Path=Foreground}"
                                Content="{Binding Path=AppointmentInfo, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               ContentTemplate="{Binding Path=parentCalendar.AppointmentTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfCalendar" x:Key="DefaultSfCalendarStyle">
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ManipulationMode" Value="TranslateY"/>
        <Setter Property="CellTemplate" Value="{StaticResource DefaultCellTemplate}"/>
        <Setter Property="PreviousScrollButtonTemplate" Value="{StaticResource DefaultPreviousScrollButtonTemplate}"/>
        <Setter Property="NextScrollButtonTemplate" Value="{StaticResource DefaultNextScrollButtonTemplate}"/>
        <Setter Property="BlackOutCellTemplate" Value="{StaticResource DefaultBlackOutTemplate}"/>
        <Setter Property="AppointmentTemplate" Value="{StaticResource DefaultAppointmentCellTemplate}"/>
        <Setter Property="DisabledCellTemplate" Value="{StaticResource DisabledCellTemplate}"/>
        <Setter Property="YearTemplate" Value="{StaticResource DefaultYearTemplate}" />
        <Setter Property="BorderBrush" Value="#E6E6E6"/>
        <Setter Property="HeaderFontFamily" Value="Segoe UI" />
        <Setter Property="HeaderFontSize" Value="20" />
        <Setter Property="HeaderForeground" Value="Black" />
        <Setter Property="DayHeaderForeground" Value="#737373" />
        <Setter Property="DayCellFontSize" Value="13" />
        <Setter Property="DayCellFontFamily" Value="Segoe UI" />
        <Setter Property="CellBorderBrush" Value="#E6E6E6" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DisabledCellBackground" Value="#F4F4F4" />
        <Setter Property="DisabledCellForeground" Value="#979797" />
        <Setter Property="ActiveMonthCellForeground" Value="#3e3e3e" />
        <Setter Property="InActiveMonthCellForeground" Value="#adadad" />
        <Setter Property="TodayCellBackground" Value="#0078d7" />
        <Setter Property="SelectedDateBackground" Value="#dddddd" />
        <Setter Property="SelectedDayForeground" Value="#3e3e3e" />
        <Setter Property="AppointmentBackground" Value="#ededed" />
        <Setter Property="AppointmentForeground" Value="#8c8c8c" />
        <Setter Property="BlackoutDatesForeground" Value="#979797" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfCalendar">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                    <Grid Background="{TemplateBinding Background}" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid >
                            <ContentPresenter x:Name="HeaderInlineTemplate" Visibility="Collapsed"/>
                            <Grid Name="PART_MonthHeaderGrid" Height="{Binding HeaderHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}" Background="{Binding HeaderBackground,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button  Grid.Column="0" Margin="12,0,0,0" IsTabStop="False" HorizontalAlignment="Left" VerticalAlignment="Center" Name="PART_Previous" Template="{Binding PreviousScrollButtonTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                     Visibility="{Binding ShowNavigationButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderThickness="0">
                                </Button>
                                    <Button Grid.Column="2" Margin="0,0,12,0" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Center"  Name="PART_Next"  Template="{Binding NextScrollButtonTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"  Visibility="{Binding ShowNavigationButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"   BorderThickness="0">
                                </Button>
                                <Input:CalendarDayButton Margin="12,0,0,0" IsTabStop="False" Grid.Column="1" x:Name="PART_Month" 
                                                     HorizontalContentAlignment="Center"  FontWeight="SemiBold"
                                                     VerticalAlignment="Center" Style="{StaticResource HeaderDayButtonStyle}"
							                         FontSize="{Binding HeaderFontSize, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                     FontFamily="{Binding HeaderFontFamily,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                     FontStyle="{Binding HeaderFontStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                     ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                     Foreground="{Binding HeaderForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_WeekDays" Grid.Row="1" Height="{Binding DayHeaderHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}" Background="{Binding DayHeaderBackground,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                        </Grid>

                        <Input:CalendarView Canvas.ZIndex="-1" x:Name="PART_CalendarView" Grid.Row="2" IsTabStop="False" 
                                            FontSize="{Binding DayCellFontSize,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            FontFamily="{Binding DayCellFontFamily,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            FontStyle="{Binding DayCellFontStyle,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            BorderBrush="{TemplateBinding BorderBrush}" />
                        <Grid Grid.Row="3" Visibility="{Binding InlineViewMode,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource InlineModeToVisibilityConverter}}" >
                                <Input:Expander x:Name="InlineExpender" BorderThickness="1,0,1,1" BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding AgendaViewHeight}">
                                
                            </Input:Expander>
                        </Grid>
                    </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultSfCalendarStyle}" TargetType="Input:SfCalendar"/>

    <Style TargetType="Input:CalendarView">
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="BorderBrush" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:CalendarView">
                    <Border BorderBrush="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                        <Grid x:Name="PART_LayoutRoot" >

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <Rectangle Height="1" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Row="1" Grid.ColumnSpan="13"/>
                            <Rectangle Height="1" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Row="3" Grid.ColumnSpan="13"/>
                            <Rectangle Height="1" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Row="5" Grid.ColumnSpan="13"/>
                            <Rectangle Height="1" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Row="7" Grid.ColumnSpan="13"/>
                            <Rectangle Height="1" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Row="9" Grid.ColumnSpan="13"/>

                            <Rectangle Width="0" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Column="1" Grid.RowSpan="11"/>
                            <Rectangle Width="0" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Column="3" Grid.RowSpan="11"/>
                            <Rectangle Width="0" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Column="5" Grid.RowSpan="11"/>
                            <Rectangle Width="0" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Column="7" Grid.RowSpan="11"/>
                            <Rectangle Width="0" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Column="9" Grid.RowSpan="11"/>
                            <Rectangle Width="0" Fill="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="0" Grid.Column="11" Grid.RowSpan="11"/>

                        </Grid>
                            <Grid x:Name="PART_YearLayoutRoot"  Visibility="Collapsed">
                                <ContentControl IsTabStop="False"  x:Name="PART_TempContent" HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                        Visibility="Visible" IsTapEnabled="{TemplateBinding IsTapEnabled}"
                                        >
                                </ContentControl>
                                <ContentControl  x:Name="PART_Content" HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTapEnabled="{TemplateBinding IsTapEnabled}">

                                </ContentControl>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <!--Calculator-->
    <!--<SolidColorBrush x:Key="AccentBrush" Color="#FF1FAEFF" />-->

    <Input:MemoryConverter x:Key="MemoryConverter" />

    <Style x:Key="FunctionsPaneStyle" TargetType="Input:FunctionsPane">
        <Setter Property="Foreground" Value="#FF636363"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:FunctionsPane">
                    <Grid x:Name="PART_Root">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Input:CalculatorButton Grid.Column="0" x:Name="PART_Button1" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="MC" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemoryClear" />
                        <Input:CalculatorButton Grid.Column="1" x:Name="PART_Button2" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="MR" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemoryRecall" />
                        <Input:CalculatorButton Grid.Column="2" x:Name="PART_Button3" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="MS" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Memory" />
                        <Input:CalculatorButton Grid.Column="3" x:Name="PART_Button4" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="M+" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemoryAdd" />
                        <Input:CalculatorButton Grid.Column="4" x:Name="PART_Button5" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="M-" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemorySubract" />

                        <Input:CalculatorButton Key="Back" x:Name="PART_Button6" IsTabStop="False"
                                                Grid.Row="1"
                                                BrushOpacity="0.3"                                           
                                                FontSize="15"
                                                Function="Back" >
                            <Input:CalculatorButton.Content>
                                <Path Data="M55.59375,47.9995803833008L69.890625,62.2964553833008 84.09375,48.0933303833008 89.953125,53.9527053833008 75.703125,68.1558303833008 89.625,82.0777053833008 83.8125,87.8902053833008 69.890625,73.9683303833008 55.640625,88.2652053833008 49.78125,82.3589553833008 63.609375,67.9214553833008 49.734375,53.8589553833008 55.59375,47.9995803833008z M31.265625,40.0308303833008L30.28125,40.5933303833008 29.25,41.4370803833008 2.43749928474426,68.1558303833008 29.203125,94.8277053833008 30.28125,95.6948928833008 31.265625,96.2808303833008 119.34375,96.2808303833008 119.34375,40.0308303833008 31.265625,40.0308303833008z M30.984375,32.5308303833008L121.546875,32.5308303833008 123.5859375,32.9527053833008 125.2734375,34.1245803833008 126.421875,35.8589553833008 126.84375,37.9683303833008 126.84375,98.3433303833008 126.421875,100.452705383301 125.2734375,102.187080383301 123.5859375,103.358955383301 121.546875,103.780830383301 30.984375,103.780830383301 28.359375,103.218330383301 26.109375,101.952705383301 23.90625,100.124580383301 -8.203125,68.1558303833008 23.90625,36.1870803833008 26.109375,34.3589553833008 28.359375,33.1167678833008 30.984375,32.5308303833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="20" Height="20" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button7" IsTabStop="False"
                                                Grid.Column="1"
                                                BrushOpacity="0.3"
                                                Content="C" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Clear" />
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button8" IsTabStop="False"
                                                Grid.Column="2"
                                                BrushOpacity="0.3"
                                                Content="CE" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="ClearEntry" />
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button9" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                Content="±" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Sign" />
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button10" IsTabStop="False"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="√" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="SquareRoot" />

                        <Input:CalculatorButton Grid.Row="2" x:Name="PART_Button11" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                Content="/" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Divide" />
                        <Input:CalculatorButton Grid.Row="3" x:Name="PART_Button12" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                FontSize="15"
                                                Function="Multiply" >
                            <Input:CalculatorButton.Content>
                                <Path Data="M28.03125,48.5152053833008L48,68.5308303833008 67.96875,48.5152053833008 75.515625,56.1089553833008 55.546875,76.0777053833008 75.515625,96.0464553833008 67.96875,103.593330383301 48,83.6245803833008 28.03125,103.593330383301 20.484375,96.0464553833008 40.453125,76.0777053833008 20.484375,56.1089553833008 28.03125,48.5152053833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="4" x:Name="PART_Button13" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                FontSize="15"
                                                Function="Subract" >
                            <Input:CalculatorButton.Content>
                                <Path Data="M13.078125,59.8120803833008L82.96875,59.8120803833008 82.96875,75.9370803833008 13.078125,75.9370803833008 13.078125,59.8120803833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="5" x:Name="PART_Button14" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                FontSize="15"
                                                Function="Add" >
                            <Input:CalculatorButton.Content>
                                <Path Data="M39.9375,32.9527053833008L56.0625,32.9527053833008 56.0625,59.8120803833008 82.96875,59.8120803833008 82.96875,75.9370803833008 56.0625,75.9370803833008 56.0625,102.796455383301 39.9375,102.796455383301 39.9375,75.9370803833008 13.078125,75.9370803833008 13.078125,59.8120803833008 39.9375,59.8120803833008 39.9375,32.9527053833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="2" x:Name="PART_Button15" IsTabStop="False"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="%" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Percentage" />
                        <Input:CalculatorButton Grid.Row="3" x:Name="PART_Button16" IsTabStop="False"
                                                Grid.Column="4"
                                                BrushOpacity="0.3" FlowDirection="LeftToRight"
                                                Content="1/x" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Reciproc" />
                        <Input:CalculatorButton Grid.Row="4" x:Name="PART_Button17" IsTabStop="False"
                                                Grid.RowSpan="2"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="=" Foreground="{TemplateBinding Foreground}"
                                                FontSize="35"
                                                Function="Return" />
                        <Input:InputPane x:Name="PART_Input" IsTabStop="False"
                                         Grid.Row="2"
                                         Grid.RowSpan="5"
                                         Grid.ColumnSpan="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfCalculator" x:Key="DefaultSfCalculatorStyle">
        <Setter Property="Height" Value="380" />
        <Setter Property="Width" Value="300" />
        <Setter Property="FunctionsPaneStyle" Value="{StaticResource FunctionsPaneStyle}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfCalculator">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Input:DisplayPane Grid.ColumnSpan="2" x:Name="PART_Display"
                                               Margin="3"
                                               DisplayText="{Binding DisplayText,
                                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                               Expression="{Binding Expression,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                               IsTabStop="False"
                                               Memory="{Binding Memory,
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                            <Input:FunctionsPane x:Name="PART_Functions"
                                                 Grid.Row="2"
                                                 Grid.Column="1"
                                                 IsTabStop="False"
                                                 Style="{TemplateBinding FunctionsPaneStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultSfCalculatorStyle}" TargetType="Input:SfCalculator"/>

    <Style TargetType="Input:CalculatorButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontWeight" Value="ExtraLight" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:CalculatorButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF0E96CD" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{TemplateBinding Background}" />
                        <Rectangle Fill="White" Opacity="{TemplateBinding BrushOpacity}" />

                        <Border x:Name="Border"
                                Background="#FFD6D6D6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}" FontSize="16"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="1.5"
                                   StrokeEndLineCap="Square" />
                        <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="0.5"
                                   StrokeEndLineCap="Square" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:InputPane">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:InputPane">
                    <Grid x:Name="PART_Root">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Input:CalculatorButton Key="Number7"  IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Content="7" x:Name="PART_Digit7" />
                        <Input:CalculatorButton Key="Number8" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Column="1"
                                                Content="8" x:Name="PART_Digit8"/>
                        <Input:CalculatorButton Key="Number9" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Column="2"
                                                Content="9" x:Name="PART_Digit9"/>
                        <Input:CalculatorButton Key="Number4" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                Content="4" x:Name="PART_Digit4" />
                        <Input:CalculatorButton Key="Number5" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Content="5" x:Name="PART_Digit5"/>
                        <Input:CalculatorButton Key="Number6" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                Content="6" x:Name="PART_Digit6"/>
                        <Input:CalculatorButton Key="Number1" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                Content="1" x:Name="PART_Digit1"/>
                        <Input:CalculatorButton Key="Number2" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="1"
                                                Content="2" x:Name="PART_Digit2"/>
                        <Input:CalculatorButton Key="Number3" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="2"
                                                Content="3" x:Name="PART_Digit3"/>
                        <Input:CalculatorButton Key="Number0" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="3"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Content="0" x:Name="PART_Digit0"/>
                        <Input:CalculatorButton Key="Decimal" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="3"
                                                Grid.Column="2"
                                                Content="." x:Name="PART_Decimal"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:DisplayPane">
        <Setter Property="BorderBrush" Value="#FFD6D6D6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF939292"/>
        <Setter Property="Height" Value="70" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:DisplayPane">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <TextBlock Grid.ColumnSpan="2" Height="20"
                                   Margin="8" Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Right"
                                   FontSize="14" TextTrimming="WordEllipsis"
                                   FontWeight="ExtraLight"
                                   Text="{TemplateBinding Expression}"
                                   TextAlignment="Right"
                                   TextWrapping="Wrap" />
                        <Viewbox Grid.Row="1"
                                 Grid.Column="1"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom">
                            <TextBlock Margin="8" Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center"
                                       FontSize="50"
                                       FontWeight="ExtraLight"
                                       Text="{Binding DisplayText,
                                                      RelativeSource={RelativeSource TemplatedParent}}" />
                        </Viewbox>
                        <TextBlock Grid.Row="1" x:Name="PART_MemorySign"
                                   Margin="8" Foreground="{TemplateBinding Foreground}"
                                   VerticalAlignment="Bottom"
                                   Text="M"
                                   Visibility="{Binding Path=Memory,
                                                        RelativeSource={RelativeSource TemplatedParent},
                                                        Converter={StaticResource MemoryConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="DateTimeComboMonthCellTemplate">
        <TextBlock  Text="{Binding MonthName}" HorizontalAlignment="Left"/>
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboDayCellTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding DayNumber}" />
            <TextBlock Grid.Column="1" Text="{Binding DayName}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboYearCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding YearNumber}" />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboHourCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding HourNumber}"  />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboMinuteCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding MinuteNumber}"  />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboSecondCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding SecondNumber}"  />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboAmPmCellTemplate">
        <TextBlock HorizontalAlignment="Left" Text="{Binding AmPmString}"  />
    </DataTemplate>

    <Input:DisableItemTemplateSelector x:Key="DisableItemTemplateSelector" />

    <Style TargetType="Input:DateTimeComboItem" x:Key="DefaultSfDateTimeComboItemStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="8,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:DateTimeComboItem">
                    <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundAltMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                       
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="InnerGrid" Background="Transparent">
                            <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxItemPressedBackgroundThemeBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="FocusVisualWhite" Opacity="0" StrokeDashOffset=".5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:DateTimeComboItem" BasedOn="{StaticResource DefaultSfDateTimeComboItemStyle}"/>

    <Style TargetType="Input:DateTimeItem" x:Key="DefaultSfDateTimeItemStyle">
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource ComboBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource ComboBoxBorderThemeThickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="Margin" Value="5,5,0,0"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:DateTimeItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxFocusedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxArrowPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxFocusedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedHighlightThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="PressedBackground" Fill="{ThemeResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <Border x:Name="HighlightBackground" BorderBrush="{ThemeResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{ThemeResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
                        <Rectangle x:Name="Highlight" Fill="{ThemeResource ComboBoxSelectedBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock x:Name="DropDownGlyph" Grid.Column="1" Foreground="{ThemeResource ComboBoxForegroundThemeBrush}" FontWeight="Bold" FontSize="{ThemeResource ComboBoxArrowThemeFontSize}" FontFamily="Segoe UI Symbol" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center"/>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{ThemeResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{ThemeResource ComboBoxPopupBorderThemeThickness}" Background="{ThemeResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{ThemeResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:DateTimeItem" BasedOn="{StaticResource DefaultSfDateTimeItemStyle}"/>

    <Style TargetType="Input:SfDateTimeCombo" x:Key="DefaultSfDateTimeComboStyle">
        <Setter Property="Foreground" Value="{ThemeResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}"/>
        <Setter Property="DayItemTemplate" Value="{StaticResource DateTimeComboDayCellTemplate}"></Setter>
        <Setter Property="DayItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="MonthItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="YearItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="TwelveHourItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="TwentyFourHourItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="MinuteItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="SecondItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="AMPMDesignatorItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="MonthItemTemplate" Value="{StaticResource DateTimeComboMonthCellTemplate}"></Setter>
        <Setter Property="YearItemTemplate" Value="{StaticResource DateTimeComboYearCellTemplate}"></Setter>
        <Setter Property="TwelveHourItemTemplate" Value="{StaticResource DateTimeComboHourCellTemplate}"></Setter>
        <Setter Property="TwentyFourHourItemTemplate" Value="{StaticResource DateTimeComboHourCellTemplate}"></Setter>
        <Setter Property="MinuteItemTemplate" Value="{StaticResource DateTimeComboMinuteCellTemplate}"></Setter>
        <Setter Property="SecondItemTemplate" Value="{StaticResource DateTimeComboSecondCellTemplate}"></Setter>
        <Setter Property="AMPMDesignatorItemTemplate" Value="{StaticResource DateTimeComboAmPmCellTemplate}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDateTimeCombo">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Input:DateTimeItemsControl x:Name="Part_Items" IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Input:DateTimeItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid />
                                </ItemsPanelTemplate>
                            </Input:DateTimeItemsControl.ItemsPanel>
                        </Input:DateTimeItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDateTimeCombo" BasedOn="{StaticResource DefaultSfDateTimeComboStyle}"/>


    <ControlTemplate TargetType="Button" x:Key="DefaultUpButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <!--<VisualState x:Name="Disabled">
                        <Storyboard>
                            --><!--<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>--><!--
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>-->
                    <VisualState x:Name="DisabledButton">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed"></VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border">
                <Grid Width="22" Height="22">
                    <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                    <Path x:Name="up" Width="13" Height="11" Stretch="Fill" Fill="#FF999999" Data="F1 M 143.011,160.869L 143.021,160.879L 143.001,160.898L 140.771,163.129L 140.771,165.325L 143.303,162.794L 144.1,161.995L 144.118,161.979L 144.906,162.764L 147.438,165.296L 147.438,163.101L 145.207,160.869L 144.108,159.773L 143.011,160.869 Z " 
                      HorizontalAlignment="Center" 
                      UseLayoutRounding="False" 
                      VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="DefaultDownButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DisabledButton">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <!--<VisualState x:Name="Disabled">
                        <Storyboard>
                            --><!--<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>--><!--
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>-->
                    <VisualState x:Name="Pressed">
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border">
                <Grid Width="22" Height="22">
                    <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                    <Path x:Name="down_enabled" Width="13" Height="11" Stretch="Fill" Fill="#FF999999" Data="F1 M 132.911,164.227L 132.921,164.217L 132.902,164.197L 130.671,161.967L 130.671,159.773L 133.203,162.304L 134,163.101L 134.019,163.119L 134.807,162.333L 137.338,159.8L 137.338,161.995L 135.107,164.227L 134.009,165.325L 132.911,164.227 Z " 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Center" />
                </Grid>
            </Border>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="Input:SfGridSplitter" x:Key="DefaultSfGridSplitterStyle">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="IsTabStop" Value="true"/>
        <!--<Setter Property="VerticalAlignment" Value="Center"/>-->
        <Setter Property="MinHeight" Value="25"></Setter>
        <Setter Property="MinWidth" Value="25"></Setter>
        <Setter Property="UpButtonTemplate" Value="{StaticResource DefaultUpButtonTemplate}"/>
        <Setter Property="DownButtonTemplate" Value="{StaticResource DefaultDownButtonTemplate}"/>
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Background" Value="#FF868686"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Grid x:Name="Root" Opacity=".5">

                                    <!-- Background -->
                                    <Rectangle Fill="{TemplateBinding Background}" />

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfGridSplitter">
                    <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">

                        <!-- VSM -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <!-- Horizontal Template -->
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="HorizontalTemplate" Background="{TemplateBinding Background}">
                                <StackPanel Margin="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="3.5,0,0,0"/>
                                    <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="3.5,0,0,0"/>
                                    <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="3.5,0,0,0"/>
                                </StackPanel>
                                <Grid HorizontalAlignment="Right" Margin="0 0 8 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="22"/>
                                        <ColumnDefinition Width="22"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_Up" BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}"  Template="{Binding UpButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementBeforeVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                                    <Button x:Name="PART_Down" Grid.Column="1"  BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}" Template="{Binding DownButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementAfterVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalTemplate" Visibility="Collapsed" 
                              Background="{TemplateBinding Background}">
                            <Grid.Resources>
                                <ControlTemplate TargetType="Button" x:Key="DefaultRightButtonTemplate">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <!--<VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        --><!--<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>--><!--
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>-->
                                                <VisualState x:Name="DisabledButton">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border">
                                            <Grid Width="22" Height="22">
                                                <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                                                <Path x:Name="right_enabled" Height="13" Width="13" Stretch="Fill" Fill="#FF999999" Data="F1 M 176.242,169.143L 176.231,169.133L 176.212,169.153L 173.981,171.383L 171.786,171.383L 174.317,168.851L 175.114,168.054L 175.133,168.036L 174.347,167.248L 171.814,164.717L 174.01,164.717L 176.242,166.947L 177.338,168.046L 176.242,169.143 Z " HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                    </Grid>
                                </ControlTemplate>

                                <ControlTemplate TargetType="Button" x:Key="DefaultLeftButtonTemplate">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <!--<VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        --><!--<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>--><!--
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>-->
                                                <VisualState x:Name="DisabledButton">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border">
                                            <Grid  Width="22" Height="22">
                                                <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                                                <Path x:Name="left_enabled" Height="13" Width="13" Stretch="Fill" Fill="#FF999999" Data="F1 M 172.883,159.044L 172.893,159.033L 172.912,159.054L 175.144,161.283L 177.338,161.283L 174.807,158.752L 174.01,157.955L 173.992,157.937L 174.778,157.149L 177.311,154.617L 175.115,154.617L 172.883,156.848L 171.786,157.947L 172.883,159.044 Z " HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" />
                                            </Grid>
                                        </Border>
                                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <StackPanel Margin="0" Orientation="Vertical" VerticalAlignment="Center">
                                <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="0,3.5,0,0"/>
                                <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="0,3.5,0,0"/>
                                <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="0,3.5,0,0"/>
                            </StackPanel>
                            <Grid VerticalAlignment="Top" Margin="0 8 0 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="22"/>
                                    <RowDefinition Height="22"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_Left"  BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}" Template="{Binding UpButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementBeforeVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                                <Button x:Name="PART_Right" Grid.Row="1"  BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}" Template="{Binding DownButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementAfterVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                            </Grid>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfGridSplitter" BasedOn="{StaticResource DefaultSfGridSplitterStyle}"/>

    <Style x:Key="DropDownToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="1" 
								BorderBrush="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Path x:Name="path" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDropDownButton" x:Key="DefaultSfDropDownButtonStyle">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"></Setter>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
        <Setter Property="DropDownHeight" Value="300"></Setter>
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDropDownButton">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" Grid.Row="0" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="0" 
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            </ContentPresenter>
                        </Border>
                        <ToggleButton x:Name="PART_DropDownButton" MinHeight="{TemplateBinding MinHeight}" MinWidth="50" IsTabStop="{TemplateBinding IsTabStop}" Grid.Row="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Style="{StaticResource DropDownToggleButtonStyle}" Margin="{StaticResource SyncfusionDropDownButtonBorderThemeThickness}"  Background="{TemplateBinding AccentBrush}"
											  Grid.Column="1" Height="{TemplateBinding Height}"/>

                        <Popup x:Name="PART_DropDownPopup" Grid.Row="1" Grid.ColumnSpan="2" IsLightDismissEnabled="True"
							               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Border x:Name="PART_DropDown" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}"
                                     BorderThickness="{TemplateBinding BorderThickness}" Margin="0 2 0 2" Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding Width}">
									 <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Enabled">
                                <ContentControl x:Name="PART_DropDownContent" IsTabStop="{TemplateBinding IsTabStop}"
														ContentTemplate="{TemplateBinding DropDownContentTemplate}" 
														Content="{TemplateBinding DropDownContent}" Width="{TemplateBinding Width}"
														HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                                </ContentControl>
								 </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDropDownButton" BasedOn="{StaticResource DefaultSfDropDownButtonStyle}"/>


    <!--ComboBox Control style-->
    <Input:ControlToContentConveter x:Key="ControlToContent"/>


    <ControlTemplate TargetType="Input:SfTextBoxExt" x:Key="ComboBoxTextBoxTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ButtonStates">
                    <VisualState x:Name="ButtonVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ButtonCollapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ErrorStates">
                    <VisualState x:Name="HasError">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoError"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.Resources>
                    <Style x:Name="DeleteButtonStyle" TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="BorderElement" BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                        <Border x:Name="BackgroundElement" Background="{StaticResource TextBoxButtonBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}">
                                            <TextBlock x:Name="GlyphElement" Foreground="{StaticResource ComboBoxForegroundThemeBrush}" FontFamily="Segoe UI Symbol" HorizontalAlignment="Center" Text="&#xE0A4;" VerticalAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="BackgroundElement" Grid.Row="1" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                <Border x:Name="BorderElement" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                <ContentPresenter x:Name="HeaderContentPresenter" Grid.Row="0" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" FontWeight="Normal" Margin="0,0,0,8"  Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                <ContentControl x:Name="PART_Watermark" Grid.Row="1" IsTabStop="False" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}" ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"/>
                <ScrollViewer x:Name="ContentElement" Grid.Row="1" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                <Button x:Name="DeleteButton" Grid.Row="1" MinWidth="32" MinHeight="{Binding ActualHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ComboBoxTextBoxStyle" TargetType="Input:SfTextBoxExt">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <!--<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>-->
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
    </Style>


    <Style x:Key="DefaultSfComboBoxStyle" TargetType="Input:SfComboBox">
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltMediumLowBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="Margin" Value="5,5,0,0"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditModeStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Editor" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Editor" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HighlightBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_Editor">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" FontWeight="Normal" FlowDirection="LeftToRight" Margin="0,0,0,8" Visibility="Collapsed"  x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="Validation_Border" Opacity="0.5" Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Row="1" />
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Row="1" />
                        <Rectangle x:Name="PressedBackground" Fill="{ThemeResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0" Grid.Row="1"/>
                        <Border x:Name="HighlightBackground" BorderBrush="{ThemeResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                        <Rectangle x:Name="Highlight" Fill="{ThemeResource ComboBoxItemSelectedBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0" Grid.Row="1"/>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Row="1"/>
                        <Input:SfTextBoxExt x:Name="PART_Editor" Margin="2 2 3 2" Grid.Row="1" IsTabStop="{TemplateBinding IsTabStop}"
                                            Template="{StaticResource ComboBoxTextBoxTemplate}"
                                            Style="{StaticResource ComboBoxTextBoxStyle}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontStretch="{TemplateBinding FontStretch}"
                                            Foreground="{TemplateBinding Foreground}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}" 
											Background="{TemplateBinding Background}" 
                                             SearchItemPath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisplayMemberPath}"  
                                            AutoCompleteItemTemplate="{TemplateBinding ItemTemplate}" 
                                            WatermarkTemplate="{TemplateBinding WatermarkTemplate}" 
                                            WatermarkTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" 
                                            Watermark="{TemplateBinding Watermark}" 
                                            Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="0"
                                            SuggestionMode="StartsWith" 
                                            AutoCompleteMode="Append" 
                                            IgnoreCase="True"/>
                        <TextBlock  x:Name="DropDownGlyph" Grid.Column="1" Foreground="{ThemeResource ComboBoxArrowForegroundThemeBrush}" FontWeight="Bold" FontSize="{StaticResource ComboBoxArrowThemeFontSize}" FontFamily="Segoe UI Symbol" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center" Grid.Row="1"/>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{ThemeResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{ThemeResource ComboBoxPopupBorderThemeThickness}" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                                    <ItemsPresenter Margin="{ThemeResource ComboBoxDropdownContentMargin}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfComboBox" BasedOn="{StaticResource DefaultSfComboBoxStyle}"/>

    <Style TargetType="Input:SfComboBoxItem" x:Key="DefaultSfComboBoxItemStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="8,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfComboBoxItem">
                    <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                               <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="InnerGrid" Background="Transparent">
                            <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxItemPressedBackgroundThemeBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="FocusVisualWhite" Opacity="0" StrokeDashOffset=".5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfComboBoxItem" BasedOn="{StaticResource DefaultSfComboBoxItemStyle}"/>

    <Style TargetType="Input:Expander">
        <Setter Property="Height" Value="130"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:Expander">
                    <Border BorderBrush="{Binding CellBorderBrush,RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,0,0">
                        <ScrollViewer VerticalContentAlignment="Top"
                                       VerticalScrollBarVisibility="Hidden">
                            <Grid Background="{Binding AppointmentBackground,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Input:ExpanderItemsControl x:Name="ExpanderItems" DataContext="{TemplateBinding AppointmentCollection}" Foreground="{Binding AppointmentForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            ItemsSource="{Binding}">
                                </Input:ExpanderItemsControl>
                                <ContentPresenter x:Name="ExpanderCustomTemplate" />
                                <TextBlock x:Name="EventsTextBlock" Text="No Events" FontSize="14" Margin="18" Foreground="{Binding AppointmentForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           DataContext="{TemplateBinding AppointmentCollection}" Visibility="Collapsed"
                                          >
                                </TextBlock>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:ExpanderItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"></StackPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:ExpanderItemsControl">
                    <Grid>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="Input:ExpanderItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:ExpanderItem" >
                  <Grid Margin="0,12,12,12" MinHeight="30">
                    <Border Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=AppWidth}">
                      <Grid>

                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="80"/>
                          <ColumnDefinition Width="auto"/>
                          <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="0,-5,0,0"  MinHeight="30" >
                          <TextBlock HorizontalAlignment="Center" Foreground="#7C7C7C" FontSize="12"  Text="{Binding Path=StartTime,Converter={StaticResource StartTimeConverter}}" VerticalAlignment="Top" />
                          <TextBlock HorizontalAlignment="Center" Foreground="#7C7C7C" FontSize="12"  Text="{Binding Path=EndTime,Converter={StaticResource StartTimeConverter}}" VerticalAlignment="Bottom" />
                        </Grid>
                        <TextBlock Grid.Column="2" Foreground="#333333" Text="{Binding Subject}" FontSize="15" FontFamily="Segoe UI" Margin="10,-5,0,0" TextWrapping="Wrap" VerticalAlignment="Center"/>
                        <Rectangle  Grid.Column="1" x:Name="Rect" Width="2"  Fill="{Binding Color}"/>

                      </Grid>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- SfPicker control Style -->

    <!-- SfPicker Style-->
    <Style x:Key="DefaultSfPickerStyle" TargetType="Input:SfPicker" >
        <Setter Property="Background" Value="#F2F2F2" />
        <Setter Property="BorderBrush" Value="#C2C2C2" />
        <Setter Property="Foreground" Value="#616161" />
        <Setter Property="SelectionBackground" Value="#FF007ACC" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="HeaderBackground" Value="#F2F2F2" />
        <Setter Property="HeaderForeground" Value="#616161" />
        <Setter Property="HeaderFontFamily" Value="Segoe UI" />
        <Setter Property="HeaderFontSize" Value="21" />
        <Setter Property="HeaderFontStyle" Value="Normal" />
        <Setter Property="HeaderFontWeight" Value="Bold"/>
        <Setter Property="ColumnHeaderBackground" Value="#F2F2F2" />
        <Setter Property="ColumnHeaderForeground" Value="#616161" />
        <Setter Property="ColumnHeaderFontFamily" Value="Segoe UI" />
        <Setter Property="ColumnHeaderFontSize" Value="21" />
        <Setter Property="ColumnHeaderFontStyle" Value="Normal" />
        <Setter Property="ColumnHeaderFontWeight" Value="Normal"/>
        <Setter Property="FooterBackground" Value="#F2F2F2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="SelectedItemFontSize" Value="18" />
        <Setter Property="SelectedItemFontFamily" Value="Segoe UI" />
        <Setter Property="SelectedItemFontStyle" Value="Normal" />
        <Setter Property="SelectedItemFontWeight" Value="Normal"/>
        <Setter Property="SelectedItemForeground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource DefaultTemplate}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Input:GroupPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultSfPickerStyle}" TargetType="Input:SfPicker" />

    <!-- SfPicker Default ControlTemplate -->
    <ControlTemplate x:Key="DefaultTemplate" TargetType="Input:SfPicker">
        <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" >
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Border x:Name="header" Background="{TemplateBinding HeaderBackground}" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding HeaderHeight}" Visibility="{Binding ShowHeader,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}">
                    <ContentControl Foreground="{TemplateBinding HeaderForeground}" Content="{TemplateBinding Header}" FontFamily="{TemplateBinding HeaderFontFamily}" FontSize="{TemplateBinding HeaderFontSize}" FontStyle="{TemplateBinding HeaderFontStyle}" FontWeight="{TemplateBinding HeaderFontWeight}" ContentTemplate="{TemplateBinding HeaderTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
							VerticalAlignment="Stretch" />
                </Border>
                <Grid Grid.Row="1">

                    <Rectangle Canvas.ZIndex="1" IsHitTestVisible="False" Fill="{TemplateBinding SelectionBackground}" Opacity="0.3" VerticalAlignment="Center" x:Name="Adorner" >
                    </Rectangle>
                    <ScrollViewer HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Hidden" VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Disabled">
                        <ItemsPresenter    />
                    </ScrollViewer>
                </Grid>
                <Border x:Name="footer" Background="{TemplateBinding FooterBackground}" Grid.Row="2" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding FooterHeight}" Visibility="{Binding ShowFooter,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}">
                    <Grid>
                        <ContentControl x:Name="DefaultFooter"  Visibility="{Binding Path=Footer,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ContentToVisibilityConverter},ConverterParameter=Default}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="ok" Height="{TemplateBinding FooterHeight}" Background="Transparent" BorderThickness="0" HorizontalContentAlignment="Center" >
                                    <Button.Content>
                                        <TextBlock Text="&#xE10B;" Foreground="Black" FontSize="18" FontFamily="Segoe MDL2 Assets" FontWeight="Normal" />
                                    </Button.Content>
                                </Button>
                                <Button x:Name="cancel" Height="{TemplateBinding FooterHeight}" Background="Transparent" BorderThickness="0" Grid.Column="1" HorizontalContentAlignment="Center" >
                                    <Button.Content>
                                        <TextBlock Text="&#xE10A;" Foreground="Black" FontSize="18" FontFamily="Segoe MDL2 Assets" FontWeight="Normal"/>
                                    </Button.Content>
                                </Button>
                            </Grid>
                        </ContentControl>
                        <ContentControl x:Name="CustomFooter" Visibility="{Binding Path=Footer,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ContentToVisibilityConverter},ConverterParameter=Custom}" Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Stretch" />
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- SfPicker Popup ControlTemplate -->
    <ControlTemplate x:Key="PopupTemplate" TargetType="Input:SfPicker">
        <Popup x:Name="PART_Popup" IsLightDismissEnabled="True" IsOpen="True" >
            <Border x:Name="Popup_Content"  Height="{TemplateBinding PopupHeight}" Width="{TemplateBinding PopupWidth}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" >
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Border x:Name="header" Background="{TemplateBinding HeaderBackground}" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding HeaderHeight}" Visibility="{Binding ShowHeader,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}">
                        <ContentControl Foreground="{TemplateBinding HeaderForeground}" Content="{TemplateBinding Header}" FontFamily="{TemplateBinding HeaderFontFamily}" FontSize="{TemplateBinding HeaderFontSize}" FontStyle="{TemplateBinding HeaderFontStyle}" FontWeight="{TemplateBinding HeaderFontWeight}" ContentTemplate="{TemplateBinding HeaderTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
							VerticalAlignment="Stretch" />
                    </Border>
                    <Grid Grid.Row="1">

                        <Rectangle Canvas.ZIndex="1" IsHitTestVisible="False" Fill="{TemplateBinding SelectionBackground}" Opacity="0.3" VerticalAlignment="Center" x:Name="Adorner" >
                        </Rectangle>
                        <ScrollViewer HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Hidden" VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Disabled">
                            <ItemsPresenter    />
                        </ScrollViewer>
                    </Grid>
                    <Border x:Name="footer" Background="{TemplateBinding FooterBackground}" Grid.Row="2" BorderThickness="0,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding FooterHeight}" Visibility="{Binding ShowFooter,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}">
                        <Grid>
                            <ContentControl x:Name="DefaultFooter"  Visibility="{Binding Path=Footer,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ContentToVisibilityConverter},ConverterParameter=Default}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="ok" Height="{TemplateBinding FooterHeight}" Background="Transparent" BorderThickness="0" HorizontalContentAlignment="Center" >
                                        <Button.Content>
                                            <TextBlock Text="&#xE10B;" Foreground="Black" FontSize="18" FontFamily="Segoe MDL2 Assets" FontWeight="Normal" />
                                        </Button.Content>
                                    </Button>
                                    <Button x:Name="cancel" Height="{TemplateBinding FooterHeight}" Background="Transparent" BorderThickness="0" Grid.Column="1" HorizontalContentAlignment="Center" >
                                        <Button.Content>
                                            <TextBlock Text="&#xE10A;" Foreground="Black" FontSize="18" FontFamily="Segoe MDL2 Assets" FontWeight="Normal"/>
                                        </Button.Content>
                                    </Button>
                                </Grid>
                            </ContentControl>
                            <ContentControl x:Name="CustomFooter" Visibility="{Binding Path=Footer,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ContentToVisibilityConverter},ConverterParameter=Custom}" Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                </Grid>
            </Border>
        </Popup>
    </ControlTemplate>

    <!-- SfPickerGroup Style-->
    <Style x:Key="DefualtSfPickerGroupStyle" TargetType="Input:SfPickerGroup">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfPickerGroup">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border BorderThickness="0,0,0,1" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderBackground}" BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.BorderBrush}" Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderHeight}" Visibility="{Binding Path=Parent.ShowColumnHeader,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}">
                            <Grid>
                                <ContentControl Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderForeground}" FontFamily="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderFontFamily}" FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderFontSize}" FontStyle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderFontStyle}" FontWeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderFontWeight}" Content="{TemplateBinding Header}" x:Name="DefaultView" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
							VerticalAlignment="Stretch" Background="Transparent" ContentTemplate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.ColumnHeaderTemplate}" />
                                <ContentControl x:Name="CustomView" Content="{TemplateBinding Tag}" Visibility="Collapsed" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
							VerticalAlignment="Stretch" Background="Transparent" />
                            </Grid>
                        </Border>
                        <Border Grid.Row="1"
                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Background}"
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" >
                            <ItemsPresenter  />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Input:PickerPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefualtSfPickerGroupStyle}" TargetType="Input:SfPickerGroup" />

    <!-- SfPickerItem Style-->
    <Style x:Key="DefaultSfPickerItem" TargetType="Input:SfPickerItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfPickerItem">
                    <Border Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.Background}">
                        <Grid>
                            <Grid x:Name="DefaultView">
                                <ContentControl Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.Foreground}" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsSelect,Converter={StaticResource InverseBooleanVisibilityConverter}}"
                                            FontFamily="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.FontFamily}" 
                                            FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.FontSize}"
                                            FontStyle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.FontStyle}"
                                            FontWeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.FontWeight}"
                                            Content="{TemplateBinding Content}"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
							VerticalAlignment="Stretch" Background="Transparent" ContentTemplate="{TemplateBinding ContentTemplate}" x:Name="UnSelectView" />
                                <ContentControl Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.SelectedItemForeground}" 
                                            FontFamily="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.SelectedItemFontFamily}" 
                                            FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.SelectedItemFontSize}"
                                            FontStyle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.SelectedItemFontStyle}"
                                           FontWeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Parent.Parent.SelectedItemFontWeight}"
                                            Content="{TemplateBinding Content}"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
							VerticalAlignment="Stretch" Background="Transparent" ContentTemplate="{TemplateBinding ContentTemplate}" x:Name="SelectView" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsSelect,Converter={StaticResource BooleanVisibilityConverter}}" />
                            </Grid>
                            <ContentControl x:Name="CustomView" Content="{TemplateBinding Tag}" Visibility="Collapsed" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
							VerticalAlignment="Stretch" Background="Transparent" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultSfPickerItem}" TargetType="Input:SfPickerItem" />



</ResourceDictionary>

